files:
  "/etc/nginx/conf.d/https_redirect.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # CORS 매핑 설정 - 허용할 오리진
      map $http_origin $cors_origin {
        default "";
        "https://goraekorean.site" "https://goraekorean.site";
        "https://www.goraekorean.site" "https://www.goraekorean.site";
        "https://api.goraekorean.site" "https://api.goraekorean.site";
      }

      server {
        listen 80;

        if ($http_x_forwarded_proto != 'https') {
          return 301 https://$host$request_uri;
        }

        # CORS 헤더 설정
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # OPTIONS 요청 특별 처리
        if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' $cors_origin always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
          add_header 'Access-Control-Expose-Headers' 'Authorization' always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;
          return 204;
        }

        # 기존 설정은 그대로 유지
        location / {
          proxy_pass http://docker;
          proxy_http_version 1.1;

          proxy_set_header Connection "";
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }

container_commands:
  01_reload_nginx:
    command: "service nginx reload"